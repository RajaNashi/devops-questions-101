Question 1: In Linux, the Nice command is used to prioritize the execution of processes.
a. Tell me more about it and if given a choice where do you think it will be useful in your existing project ?
b. If you have to prioritize a specific workloads in a dockerd or k8s environment, how will you do it similarly to the native Nice command of Linux ?

Question 2 : What do you know about LINUX Signals, how does Inter-Process Communication happen with uses of signals.
Follow-up : How is it related to Kubernetes pod status and to Docker entry points ?

Question 3 :What are the kubernetes probs that you have used in your deployments, explain their importance and pre-requisites for each one.
Follow up:
1. What are the check mechanisms that you used while implementing the probs apart form the httpGet
2. Probs seem very useful, Why doesn't Kubernetes mandate applications to have default probs ?
startup, readiness and liveness all are optional, why ?

Question 4 : We spoke about IPC socket or Unix domain socket in Question 2 (find that question in previous posts), explain how inter-process communication workflow works in Docker Architecture.
Follow up:
1. What is the role of docker.sock file ?
2. How Docker socket work ?

Question 5 : Design a Kubernetes deployment setup where you have 3 applications that need to run in HA to create a solution. However the applications have starting and running dependencies and requirements.
a. application 1 should always start first
b. application 2 should always start after application 1 is Ready
c. application 3 should always start after application 2 is Ready
Follow up:
1. How will you design a check mechanism for the applications in such a way that restarts and schedular reschedules dont break the dependence requirements
2. How will you plan to incorporate such check mechanism with CD tools where deployments are gitops driven
